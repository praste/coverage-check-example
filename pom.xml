<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.choudhury</groupId>
  <artifactId>coverage-check-example</artifactId>
  <version>1.1-SNAPSHOT</version>

  <dependencies>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.8.1</version>
        <scope>test</scope>
      </dependency>

  </dependencies>

  <build>
    <plugins>
    
      <plugin>
	<groupId>external.atlassian.jgitflow</groupId>
	<artifactId>jgitflow-maven-plugin</artifactId>
	<version>1.0-m5-SNAPSHOT</version>
	<configuration>

		<!-- Keep your maven submodules at the same version as the parent POM -->
		<autoVersionSubmodules>true</autoVersionSubmodules>
		<!--
		Pusing in-development features to origin allows all devs to see what each other
		are working on
		-->
		<pushFeatures>true</pushFeatures>
		<!--
		This allows the CI server (e.g. Jenkins) to automatically push new releases to
		origin; you can then either manually deploy them or, if you are doing Continuous
		Deployments, auto-deploy them to prod
		-->
		<pushReleases>true</pushReleases>
		<!--
		Hot Fixes should be pushed to origin as well so that any dev can pick them up
		-->
		<pushHotfixes>true</pushHotfixes>
		<!--
		Prevents deployments from dev workstations so that they can be done by a CI
		server
		-->
		<noDeploy>true</noDeploy>
	</configuration>
       </plugin>
      <!-- order of execution is (1) prepare agent is run to configure the property, then (2)unit tests are run, then (3) the check goal of jacoco is run to check code coverage -->
    
      <!-- the surefire plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.16</version>
        <configuration>
            <!-- (2)  setup the argLine and run the unit tests.   **NOTE the "jacocArgeLine" property was configured the "prepare-agent" goal of Jacoco  (see below) -->
            <argLine>${jacocArgeLine} -Xmx256m</argLine>
            <!-- Skips unit tests if the value of skip.unit.tests property is true -->
        </configuration>
      </plugin>
    
    
      <!-- the jacoco plugin, we are going to use 2 goals provided by this plugin -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.0.201403182114</version>
        
         <executions>

           <!--  (1)  Prepare agent runs in the init phase, it setups the jacocoProperty,  so we can insert this to the maven sure fire argLine and get to run jacoco as agent -->
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>jacocArgeLine</propertyName>
              <includes>
                <include>com.choudhury.codecoverage.*</include>
              </includes>
            </configuration>
          </execution>
          
          <!--  (3) the check goal by default runs in the verify phase, we want to fail the build if mimimum code coverage checks aren't met -->
          <execution>
            <id>check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <haltOnFailure>false</haltOnFailure>
              <rules>
                <!-- All classes must have 80% line and branch coverage . Note we use 2 d.p so that we get can any check failure messages reported to 2 d.p  -->
                <rule>
                  <element>CLASS</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.80</minimum>
                    </limit>
                    <limit>
                      <counter>BRANCH</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.80</minimum>
                    </limit>
                  </limits>
                  <excludes>
                    <exclude>com.choudhury.codecoverage.Bye</exclude>
                  </excludes>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      
    </plugins>
  </build>
</project>
